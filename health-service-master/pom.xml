<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>za.co.dreamteam</groupId>
    <artifactId>health-service-master</artifactId>
    <version>0.1</version>
    <packaging>pom</packaging>

    <!-- 
    This is the 'root' pom file for the khula enterprise support project.
  
    All other pom files extend from this pom file, either directly or indirectly.
  
    This is therefore a useful place to configure dependencies and plugin version that apply to all modules.
   -->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <org.hibernate.version>4.2.6.Final</org.hibernate.version>
    <org.slf4j.version>1.5.11</org.slf4j.version>
    <commons-logging.version>1.1.1</commons-logging.version>
  </properties>

  <pluginRepositories>
    <pluginRepository>
      <id>codehaus</id>
      <url>https://nexus.codehaus.org/content/repositories/releases</url>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <updatePolicy>never</updatePolicy>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>


  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.6</version>
          <configuration>
            <skip>false</skip>
            <excludes>
              <exclude>**/ejb/**</exclude>
              <exclude>**/*EJBTest.java</exclude>
              <exclude>**/*TestUtils.java</exclude>
            </excludes>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <!-- Compiler settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.1</version>
        <configuration>
          <verbose>false</verbose>
          <fork>true</fork>
          <source>1.6</source>
          <target>1.6</target>
          <meminitial>128m</meminitial>
          <maxmem>512m</maxmem>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifest>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              <addClasspath>true</addClasspath>
              <!-- Workaround for Maven bug #MJAR-156 (https://jira.codehaus.org/browse/MJAR-156) -->
			  <useUniqueVersions>false</useUniqueVersions>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Assembly settings -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
            </manifest>
            <addMavenDescriptor>false</addMavenDescriptor>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.6</version>
        <configuration>
        <outputDirectory>aggregateCobertura</outputDirectory>
          <check/>
          <formats>
            <format>xml</format>
            <format>html</format>
          </formats>
          <aggregate>true</aggregate>
        </configuration>
        <executions>
          <execution>
            <phase>test</phase>
            <goals>
              <goal>cobertura</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>

      <!-- Manage dependency on slf4j to ${org.slf4j.version} -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${org.slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.8.2</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>jotm</groupId>
        <artifactId>jotm</artifactId>
        <version>2.0.10</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>jotm</groupId>
        <artifactId>jotm_jrmp_stubs</artifactId>
        <version>2.0.10</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.experlog</groupId>
        <artifactId>xapool</artifactId>
        <version>1.5.0</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>3.1</version>
      <scope>compile</scope>
    </dependency>

    <!-- A drop in replacement for commons-logging which delegates to slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${org.slf4j.version}</version>
    </dependency>

    <!-- See http://www.slf4j.org/faq.html#excludingJCL -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${commons-logging.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Use JDK bindings for WebSphere -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-jdk14</artifactId>
      <version>${org.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>

	<!-- Logger implementation for testing -->
	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-simple</artifactId>
		<version>${org.slf4j.version}</version>
		<scope>test</scope>
    </dependency>
           
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.7.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.1</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-digester</groupId>
      <artifactId>commons-digester</artifactId>
      <version>1.8</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.3.1</version>
      <scope>provided</scope>
    </dependency>

    <!-- J2EE.  We use the websphere version so that we get unstriped classes -->
    <dependency>
      <groupId>com.ibm.websphere</groupId>
      <artifactId>j2ee</artifactId>
      <version>6.0</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test related dependencies -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>1.4.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
      <version>1.4.10</version>
      <scope>test</scope>
    </dependency>

  </dependencies>  
  
  <modules>
    <module>health-ee-ear</module>
    <module>health-service-client</module>
    <module>health-web</module>
    <module>health-common</module>
    <module>health-service</module>
    <module>health-persistence</module>
  </modules>
</project>